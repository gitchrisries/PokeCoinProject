/**
 * Pokecoin
 * The Pokecoin documentation
 *
 * The version of the OpenAPI document: 1.5.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Block from './Block';
import Transaction from './Transaction';

/**
 * The AddBlockResponse model module.
 * @module model/AddBlockResponse
 * @version 1.5.4
 */
class AddBlockResponse {
    /**
     * Constructs a new <code>AddBlockResponse</code>.
     * The add block response schema if block was added
     * @alias module:model/AddBlockResponse
     */
    constructor() { 
        
        AddBlockResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AddBlockResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddBlockResponse} obj Optional instance to populate.
     * @return {module:model/AddBlockResponse} The populated <code>AddBlockResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddBlockResponse();

            if (data.hasOwnProperty('block')) {
                obj['block'] = Block.constructFromObject(data['block']);
            }
            if (data.hasOwnProperty('transaction')) {
                obj['transaction'] = Transaction.constructFromObject(data['transaction']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddBlockResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddBlockResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `block`
        if (data['block']) { // data not null
          Block.validateJSON(data['block']);
        }
        // validate the optional field `transaction`
        if (data['transaction']) { // data not null
          Transaction.validateJSON(data['transaction']);
        }

        return true;
    }


}



/**
 * @member {module:model/Block} block
 */
AddBlockResponse.prototype['block'] = undefined;

/**
 * @member {module:model/Transaction} transaction
 */
AddBlockResponse.prototype['transaction'] = undefined;






export default AddBlockResponse;

