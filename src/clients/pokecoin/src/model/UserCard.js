/**
 * Pokecoin
 * The Pokecoin documentation
 *
 * The version of the OpenAPI document: 1.5.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserCard model module.
 * @module model/UserCard
 * @version 1.5.4
 */
class UserCard {
    /**
     * Constructs a new <code>UserCard</code>.
     * An user card
     * @alias module:model/UserCard
     */
    constructor() { 
        
        UserCard.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserCard</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserCard} obj Optional instance to populate.
     * @return {module:model/UserCard} The populated <code>UserCard</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserCard();

            if (data.hasOwnProperty('cardId')) {
                obj['cardId'] = ApiClient.convertToType(data['cardId'], 'String');
            }
            if (data.hasOwnProperty('cardPack')) {
                obj['cardPack'] = ApiClient.convertToType(data['cardPack'], 'String');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserCard</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserCard</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cardId'] && !(typeof data['cardId'] === 'string' || data['cardId'] instanceof String)) {
            throw new Error("Expected the field `cardId` to be a primitive type in the JSON string but got " + data['cardId']);
        }
        // ensure the json data is a string
        if (data['cardPack'] && !(typeof data['cardPack'] === 'string' || data['cardPack'] instanceof String)) {
            throw new Error("Expected the field `cardPack` to be a primitive type in the JSON string but got " + data['cardPack']);
        }

        return true;
    }


}



/**
 * @member {String} cardId
 */
UserCard.prototype['cardId'] = undefined;

/**
 * @member {String} cardPack
 */
UserCard.prototype['cardPack'] = undefined;

/**
 * @member {Number} timestamp
 */
UserCard.prototype['timestamp'] = undefined;






export default UserCard;

