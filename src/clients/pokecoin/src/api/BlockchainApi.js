/**
 * Pokecoin
 * The Pokecoin documentation
 *
 * The version of the OpenAPI document: 1.5.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AddBlockBody from '../model/AddBlockBody';
import AddBlockErrorResponse from '../model/AddBlockErrorResponse';
import AddBlockResponse from '../model/AddBlockResponse';
import Block from '../model/Block';
import UnauthorizedError from '../model/UnauthorizedError';
import UnexpectedError from '../model/UnexpectedError';

/**
* Blockchain service.
* @module api/BlockchainApi
* @version 1.5.4
*/
export default class BlockchainApi {

    /**
    * Constructs a new BlockchainApi. 
    * @alias module:api/BlockchainApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the blockchainBlocksPost operation.
     * @callback module:api/BlockchainApi~blockchainBlocksPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AddBlockResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/AddBlockBody} opts.body 
     * @param {module:api/BlockchainApi~blockchainBlocksPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AddBlockResponse}
     */
    blockchainBlocksPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AddBlockResponse;
      return this.apiClient.callApi(
        '/blockchain/blocks', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the blockchainCurrentDifficultyGet operation.
     * @callback module:api/BlockchainApi~blockchainCurrentDifficultyGetCallback
     * @param {String} error Error message, if any.
     * @param {Number} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/BlockchainApi~blockchainCurrentDifficultyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Number}
     */
    blockchainCurrentDifficultyGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = 'Number';
      return this.apiClient.callApi(
        '/blockchain/currentDifficulty', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the blockchainLastBlockGet operation.
     * @callback module:api/BlockchainApi~blockchainLastBlockGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Block} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/BlockchainApi~blockchainLastBlockGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Block}
     */
    blockchainLastBlockGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Block;
      return this.apiClient.callApi(
        '/blockchain/lastBlock', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
